[General]
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config = 
sim-time-limit=5s
warmup-period=0s
repeat = 1
**.routingRecorder.enabled = false


############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/run${runnumber}-rep${repetition}.sca
output-vector-file = ${resultdir}/${configname}/run${runnumber}-rep${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

################ Channel parameters #####################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################ PhyLayer parameters #####################
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"


[Config Base]
network=FrequencyNetwork

### Number of UEs.
*.numUeCell = 0
*.numPairs = ${N=2..10 step 1}
*.numUeD2DTx = ${N}
*.numUeD2DRx = ${N}

### One resource. 
**.deployer.numRbDl = 1
**.deployer.numRbUl = 1
**.numBands = 1

### eNodeB configuration.
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

### UE configuration.
*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

*.ueCell*[*].mobility.initialX = uniform(290m, 310m)
*.ueCell*[*].mobility.initialY = uniform(290m, 310m)

*.ueD2D*[*].mobility.initialX = uniform(490m, 510m)
*.ueD2D*[*].mobility.initialY = uniform(290m, 310m)

## Place D2D UEs far from the eNodeB...
#*.ueD2DTx[0].mobility.initialX = 350m
#*.ueD2DTx[0].mobility.initialY = 300m
#*.ueD2DRx[0].mobility.initialX = 360m
#*.ueD2DRx[0].mobility.initialY = 300m
#
#*.ueD2DTx[1].mobility.initialX = 350m
#*.ueD2DTx[1].mobility.initialY = 310m
#*.ueD2DRx[1].mobility.initialX = 360m
#*.ueD2DRx[1].mobility.initialY = 310m
#
#*.ueD2DTx[2].mobility.initialX = 350m
#*.ueD2DTx[2].mobility.initialY = 320m
#*.ueD2DRx[2].mobility.initialX = 360m
#*.ueD2DRx[2].mobility.initialY = 320m
#
#*.ueD2DTx[3].mobility.initialX = 350m
#*.ueD2DTx[3].mobility.initialY = 330m
#*.ueD2DRx[3].mobility.initialX = 360m
#*.ueD2DRx[3].mobility.initialY = 330m
#
#*.ueD2DTx[4].mobility.initialX = 350m
#*.ueD2DTx[4].mobility.initialY = 340m
#*.ueD2DRx[4].mobility.initialX = 360m
#*.ueD2DRx[4].mobility.initialY = 340m
#
#*.ueD2DTx[5].mobility.initialX = 350m
#*.ueD2DTx[5].mobility.initialY = 350m
#*.ueD2DRx[5].mobility.initialX = 360m
#*.ueD2DRx[5].mobility.initialY = 350m
#
#*.ueD2DTx[6].mobility.initialX = 350m
#*.ueD2DTx[6].mobility.initialY = 360m
#*.ueD2DRx[6].mobility.initialX = 360m
#*.ueD2DRx[6].mobility.initialY = 360m
#
#*.ueD2DTx[7].mobility.initialX = 350m
#*.ueD2DTx[7].mobility.initialY = 370m
#*.ueD2DRx[7].mobility.initialX = 360m
#*.ueD2DRx[7].mobility.initialY = 370m
#
#*.ueD2DTx[8].mobility.initialX = 350m
#*.ueD2DTx[8].mobility.initialY = 380m
#*.ueD2DRx[8].mobility.initialX = 360m
#*.ueD2DRx[8].mobility.initialY = 380m
#
#*.ueD2DTx[9].mobility.initialX = 350m
#*.ueD2DTx[9].mobility.initialY = 390m
#*.ueD2DRx[9].mobility.initialX = 360m
#*.ueD2DRx[9].mobility.initialY = 390m


[Config UDPTraffic]
extends=Base

### Traffic configuration.
*.ue*[*].numUdpApps = 1

**.ueCell[*].udpApp[0].typename = "UDPBasicApp"
**.ueCell[*].udpApp[0].destAddresses = "server"
**.ueCell[*].udpApp[0].destPort = 1000
**.ueCell[*].udpApp[0].sendInterval = 0.0005s # 2 packets per TTI = full buffer
**.ueCell[*].udpApp[0].messageLength = 10B  # <576B from RFC1122 

**.ueD2DTx[*].udpApp[0].typename = "UDPBasicApp"
**.ueD2DTx[*].udpApp[*].destAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
**.ueD2DTx[*].lteNic.d2dPeerAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
**.ueD2DTx[*].udpApp[0].destPort = 1000
**.ueD2DTx[*].udpApp[0].sendInterval = 0.0005s # 2 packets per TTI = full buffer
**.ueD2DTx[*].udpApp[0].messageLength = 10B  # <576B from RFC1122

**.ueD2DRx[*].udpApp[0].typename = "UDPSink"
**.ueD2DRx[*].udpApp[0].localPort = 1000

### Enable D2D for the eNodeB and the UEs involved in direct communications.
*.eNodeB.d2dCapable = true
*.ueD2D*[*].d2dCapable = true
*.ueCell*[*].d2dCapable = false
**.amcMode = "D2D"

*.eNodeB.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false
**.d2dCqi = 7


[Config NoReusePlentyResources]


[Config NoReuseDRR]
extends=UDPTraffic

**.schedulingDisciplineUl = "DRR"
**.schedulingDisciplineDl = "DRR"


[Config NoReusePF]
extends=UDPTraffic

**.schedulingDisciplineUl = "PF"
**.schedulingDisciplineDl = "PF"


[Config NoReuseMaxCI]
extends=UDPTraffic

**.schedulingDisciplineUl = "MAXCI"
**.schedulingDisciplineDl = "MAXCI"


[Config YesReuse]
extends=UDPTraffic

**.schedulingDisciplineUl = "ALLOCATOR_BESTFIT"
**.schedulingDisciplineDl = "ALLOCATOR_BESTFIT"
**.buildConflictGraph = true # Edges between UE Vertices if received power > threshold. If edge exists,
							 # the nodes are conflicting and won't share a resource block.
**.conflictGraphUpdatePeriod = 1s
**.conflictGraphThreshold = 0   # dB threshold when received power between two UEs is large enough 
								  # that a conflict exists. -20dB is a large threshold and conflicts are very unlikely.
								  # -90dB is the default, and -150dB would be a very low threshold.


[Config YesReuseFar]
extends=YesReuse

*.ueD2DTx[0].mobility.initialX = 350m
*.ueD2DTx[0].mobility.initialY = 300m
*.ueD2DRx[0].mobility.initialX = 360m
*.ueD2DRx[0].mobility.initialY = 300m

*.ueD2DTx[1].mobility.initialX = 400m
*.ueD2DTx[1].mobility.initialY = 300m
*.ueD2DRx[1].mobility.initialX = 410m
*.ueD2DRx[1].mobility.initialY = 300m

*.ueD2DTx[2].mobility.initialX = 450m
*.ueD2DTx[2].mobility.initialY = 300m
*.ueD2DRx[2].mobility.initialX = 460m
*.ueD2DRx[2].mobility.initialY = 300m

*.ueD2DTx[3].mobility.initialX = 500m
*.ueD2DTx[3].mobility.initialY = 300m
*.ueD2DRx[3].mobility.initialX = 510m
*.ueD2DRx[3].mobility.initialY = 300m

*.ueD2DTx[4].mobility.initialX = 550m
*.ueD2DTx[4].mobility.initialY = 300m
*.ueD2DRx[4].mobility.initialX = 560m
*.ueD2DRx[4].mobility.initialY = 300m

*.ueD2DTx[5].mobility.initialX = 250m
*.ueD2DTx[5].mobility.initialY = 300m
*.ueD2DRx[5].mobility.initialX = 260m
*.ueD2DRx[5].mobility.initialY = 300m

*.ueD2DTx[6].mobility.initialX = 200m
*.ueD2DTx[6].mobility.initialY = 300m
*.ueD2DRx[6].mobility.initialX = 210m
*.ueD2DRx[6].mobility.initialY = 300m

*.ueD2DTx[7].mobility.initialX = 150m
*.ueD2DTx[7].mobility.initialY = 300m
*.ueD2DRx[7].mobility.initialX = 160m
*.ueD2DRx[7].mobility.initialY = 300m

*.ueD2DTx[8].mobility.initialX = 100m
*.ueD2DTx[8].mobility.initialY = 300m
*.ueD2DRx[8].mobility.initialX = 110m
*.ueD2DRx[8].mobility.initialY = 300m

*.ueD2DTx[9].mobility.initialX = 50m
*.ueD2DTx[9].mobility.initialY = 300m
*.ueD2DRx[9].mobility.initialX = 60m
*.ueD2DRx[9].mobility.initialY = 300m