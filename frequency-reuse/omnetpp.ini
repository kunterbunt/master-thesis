[General]
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config =
sim-time-limit=30s
warmup-period=0s
repeat = 20
**.routingRecorder.enabled = false

### Statistics.
output-scalar-file = ${resultdir}/${configname}/rep${repetition}.sca
output-vector-file = ${resultdir}/${configname}/rep${repetition}.vec
**.vector-recording = false
seed-set = ${repetition}

################ Channel parameters #####################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################ PhyLayer parameters #####################
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
# Five resources appears to be the minimum number to have sufficiently many TTIs.
**.deployer.numRbDl = 5
**.deployer.numRbUl = 5
**.numBands = 5


### BASE CONFIGURATION ###
[Config Base]
network=FrequencyNetwork

### Number of UEs.
*.numUeCell = 0
*.numUeD2DTx = 2
*.numUeD2DRx = 2

### Positioning.
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

*.ue*[*].mobility.initialX = uniform(290m,310m)
*.ue*[*].mobility.initialY = uniform(340m,350m)

### Default scheduling discipline.
**.schedulingDisciplineUl = "NAIVE_ROUND_ROBIN"
**.schedulingDisciplineDl = "NAIVE_ROUND_ROBIN"

### eNodeB configuration.
*.eNodeB.mobility.initFromDisplayString = false

### UE configuration.
*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

### Enable D2D for the eNodeB and the UEs involved in direct communications.
*.eNodeB.d2dCapable = true
*.ueD2D*[*].d2dCapable = true
*.ueCell*[*].d2dCapable = false
**.amcMode = "D2D"

*.eNodeB.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false
#**.d2dCqi = 7


### UDP FULL BUFFER TRAFFIC ###
[Config TrafficUDPFullBuffer]
extends=Base

*.ue*[*].numUdpApps = 1

**.ueCell[*].udpApp[0].typename = "UDPBasicApp"
**.ueCell[*].udpApp[0].destAddresses = "server"
**.ueCell[*].udpApp[0].destPort = 1000
**.ueCell[*].udpApp[0].sendInterval = 0.0005s # 2 packets per TTI = full buffer
**.ueCell[*].udpApp[0].messageLength = 50B  # <576B from RFC1122

**.ueD2DTx[*].udpApp[0].typename = "UDPBasicApp"
**.ueD2DTx[*].udpApp[*].destAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
**.ueD2DTx[*].lteNic.d2dPeerAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
**.ueD2DTx[*].udpApp[0].destPort = 1000
**.ueD2DTx[*].udpApp[0].sendInterval = 0.0005s # 2 packets per TTI = full buffer
**.ueD2DTx[*].udpApp[0].messageLength = 50B  # <576B from RFC1122

**.ueD2DRx[*].udpApp[0].typename = "UDPSink"
**.ueD2DRx[*].udpApp[0].localPort = 1000

**.server.udpApp[0].typename = "UDPSink"
**.server.udpApp[0].localPort = 1000


### FTP VIA TCP TRAFFIC ###
[Config TrafficTCPFTP]
extends=Base

*.ueD2D*[*].numTcpApps = 1

*.ueD2DTx[*].tcpApp[*].typename = "TCPSessionApp"
*.ueD2DTx[*].tcpApp[*].connectPort = 1000
*.ueD2DTx[*].tcpApp[*].localPort = 1000
*.ueD2DTx[*].tcpApp[*].sendBytes = 1GiB
*.ueD2DTx[*].tcpApp[*].active = true
*.ueD2DTx[*].tcpApp[*].tOpen = uniform(0.010s,0.1s)
*.ueD2DTx[*].tcpApp[*].tSend = uniform(0.15s,0.5s)
*.ueD2DTx[*].tcpApp[*].connectAddress = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
*.ueD2DTx[*].tcpApp[*].localAddress = "ueD2DTx[" + string(ancestorIndex(1)) + "]"

# Receivers
*.ueD2DRx[*].tcpApp[*].typename = "TCPSinkApp"
*.ueD2DRx[*].tcpApp[*].localPort = 1000

*.ueD2DTx[*].lteNic.d2dPeerAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
*.ueD2DRx[*].lteNic.d2dPeerAddresses = "ueD2DTx[" + string(ancestorIndex(1)) + "]"

**.tcpApp[*].tClose = -1s




[Config testIncreasingDistance]
extends=TrafficUDPFullBuffer

**.schedulingDisciplineUl = "NAIVE_ROUND_ROBIN"
**.schedulingDisciplineDl = "NAIVE_ROUND_ROBIN"
*.numUeD2DTx = 1
*.numUeD2DRx = 1

*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m
# Receiver is at (400,300).
*.ueD2DRx[0].mobility.initialX = 400m
*.ueD2DRx[0].mobility.initialY = 300m
# Transmitter moves from 10m away to 100m away.
*.ueD2DTx[0].mobility.initialX = ${d=410..500 step 10}m
*.ueD2DTx[0].mobility.initialY = 300m
output-scalar-file = ${resultdir}/${configname}/reused${d}-rep${repetition}.sca


[Config ReuseTester]
extends=TrafficUDPFullBuffer
*.numUeD2DTx = 2
*.numUeD2DRx = 2
**.deployer.numRbDl = 5
**.deployer.numRbUl = 5
**.numBands = 5
**.schedulingDisciplineUl = "REUSE_TESTER"
**.schedulingDisciplineDl = "REUSE_TESTER"

*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

#*.ueD2D*[*].mobility.initialX = uniform(290m,310m)
#*.ueD2D*[*].mobility.initialY = uniform(340m,350m)

*.ueD2DTx[0].mobility.initialX = 300m
*.ueD2DTx[0].mobility.initialY = 340m
*.ueD2DRx[0].mobility.initialX = 300m 
*.ueD2DRx[0].mobility.initialY = 390m # 50m from Tx

*.ueD2DTx[1].mobility.initialX = 300m
*.ueD2DTx[1].mobility.initialY = ${d=350..390 step 10}m # 10m -> 50m away from other pair
*.ueD2DRx[1].mobility.initialX = 350m # 50m from Tx 
*.ueD2DRx[1].mobility.initialY = ${d}m
output-scalar-file = ${resultdir}/${configname}/d${d}-rep${repetition}.sca


[Config AllocatorBestFitTester]
extends=ReuseTester
**.buildConflictGraph = true
**.conflictGraphUpdatePeriod = 1s
**.conflictGraphThreshold = -20   #dB
**.schedulingDisciplineUl = "ALLOCATOR_BESTFIT"
**.schedulingDisciplineDl = "ALLOCATOR_BESTFIT"

#output-scalar-file = ${resultdir}/${configname}/rep${repetition}.sca


[Config interferenceTester]
extends=TrafficUDPFullBuffer
extends=TrafficUDPFullBuffer
*.numUeD2DTx = 10
*.numUeD2DRx = 10
**.deployer.numRbDl = 5
**.deployer.numRbUl = 5
**.numBands = 5
**.schedulingDisciplineUl = "REUSE_TESTER"
**.schedulingDisciplineDl = "REUSE_TESTER"

*.ue*[1..9].mobility.initialX = uniform(290m,310m)
*.ue*[1..9].mobility.initialY = uniform(340m,350m)
*.ueD2DTx[0].mobility.initialX = ${d=300..380 step 10}m # 0m -> 70m away from the cluster
*.ueD2DTx[0].mobility.initialY = 345m
*.ueD2DRx[0].mobility.initialX = ${d}m 
*.ueD2DRx[0].mobility.initialY = 355m # 10m from Tx