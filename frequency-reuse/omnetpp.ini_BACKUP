[General]
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config = 
sim-time-limit=60s
warmup-period=0s
repeat = 20
**.routingRecorder.enabled = false


############### Statistics ##################
*.numPairs = ${N=1..1 step 1}
output-scalar-file = ${resultdir}/${configname}/N${N}-rep${repetition}.sca
output-vector-file = ${resultdir}/${configname}/N${N}-rep${repetition}.vec
seed-set = ${repetition}
**.vector-recording = false

################ Channel parameters #####################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################ PhyLayer parameters #####################
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"


[Config Base]
network=FrequencyNetwork

### Number of UEs.
*.numUeCell = 0
*.numUeD2DTx = ${N}
*.numUeD2DRx = ${N}

### Five resources appears to be the minimum number to have sufficiently many TTIs. 
**.deployer.numRbDl = 5
**.deployer.numRbUl = 5
**.numBands = 5
### Default scheduling discipline.
**.schedulingDisciplineUl = "NAIVE_ROUND_ROBIN"
**.schedulingDisciplineDl = "NAIVE_ROUND_ROBIN"

### eNodeB configuration.
*.eNodeB.mobility.initFromDisplayString = false

### UE configuration.
*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

### Enable D2D for the eNodeB and the UEs involved in direct communications.
*.eNodeB.d2dCapable = true
*.ueD2D*[*].d2dCapable = true
*.ueCell*[*].d2dCapable = false
**.amcMode = "D2D"

*.eNodeB.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false
#**.d2dCqi = 7

[Config TrafficFullBuffer]
extends=Base

### Traffic configuration.
*.ue*[*].numUdpApps = 1

**.ueCell[*].udpApp[0].typename = "UDPBasicApp"
**.ueCell[*].udpApp[0].destAddresses = "server"
**.ueCell[*].udpApp[0].destPort = 1000
**.ueCell[*].udpApp[0].sendInterval = 0.0005s # 2 packets per TTI = full buffer
**.ueCell[*].udpApp[0].messageLength = 500B  # <576B from RFC1122 

**.ueD2DTx[*].udpApp[0].typename = "UDPBasicApp"
**.ueD2DTx[*].udpApp[*].destAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
**.ueD2DTx[*].lteNic.d2dPeerAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
**.ueD2DTx[*].udpApp[0].destPort = 1000
**.ueD2DTx[*].udpApp[0].sendInterval = 0.0005s # 2 packets per TTI = full buffer
**.ueD2DTx[*].udpApp[0].messageLength = 500B  # <576B from RFC1122

**.ueD2DRx[*].udpApp[0].typename = "UDPSink"
**.ueD2DRx[*].udpApp[0].localPort = 1000

**.server.udpApp[0].typename = "UDPSink"
**.server.udpApp[0].localPort = 1000


[Config TrafficFTP]
extends=Base
*.ueD2D*[*].numTcpApps = 1
# Transmitters
*.ueD2DTx[*].tcpApp[*].typename = "TCPSessionApp"
*.ueD2DTx[*].tcpApp[*].connectPort = 1000
*.ueD2DTx[*].tcpApp[*].localPort = 1000
*.ueD2DTx[*].tcpApp[*].sendBytes = 1GiB
*.ueD2DTx[*].tcpApp[*].active = true
*.ueD2DTx[*].tcpApp[*].tOpen = uniform(0.010s,0.1s) 
*.ueD2DTx[*].tcpApp[*].tSend = uniform(0.15s,0.5s) 
*.ueD2DTx[*].tcpApp[*].connectAddress = "ueD2DRx[" + string(ancestorIndex(1)) + "]" 
*.ueD2DTx[*].tcpApp[*].localAddress = "ueD2DTx[" + string(ancestorIndex(1)) + "]" 

# Receivers
*.ueD2DRx[*].tcpApp[*].typename = "TCPSinkApp"
*.ueD2DRx[*].tcpApp[*].localPort = 1000

*.ueD2DTx[*].lteNic.d2dPeerAddresses = "ueD2DRx[" + string(ancestorIndex(1)) + "]"
*.ueD2DRx[*].lteNic.d2dPeerAddresses = "ueD2DTx[" + string(ancestorIndex(1)) + "]"

**.tcpApp[*].tClose = -1s


[Config PositionRandomClose]
extends=TrafficFullBuffer
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

*.ueD2D*[*].mobility.initialX = uniform(475m, 525m)
*.ueD2D*[*].mobility.initialY = uniform(275m, 325m)


[Config PositionFixedClose]
extends=TrafficFullBuffer
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

*.ueD2DTx[0].mobility.initialX = 350m
*.ueD2DTx[0].mobility.initialY = 300m
*.ueD2DRx[0].mobility.initialX = 360m
*.ueD2DRx[0].mobility.initialY = 300m

*.ueD2DTx[1].mobility.initialX = 350m
*.ueD2DTx[1].mobility.initialY = 310m
*.ueD2DRx[1].mobility.initialX = 360m
*.ueD2DRx[1].mobility.initialY = 310m

*.ueD2DTx[2].mobility.initialX = 350m
*.ueD2DTx[2].mobility.initialY = 320m
*.ueD2DRx[2].mobility.initialX = 360m
*.ueD2DRx[2].mobility.initialY = 320m

*.ueD2DTx[3].mobility.initialX = 350m
*.ueD2DTx[3].mobility.initialY = 330m
*.ueD2DRx[3].mobility.initialX = 360m
*.ueD2DRx[3].mobility.initialY = 330m

*.ueD2DTx[4].mobility.initialX = 350m
*.ueD2DTx[4].mobility.initialY = 340m
*.ueD2DRx[4].mobility.initialX = 360m
*.ueD2DRx[4].mobility.initialY = 340m

*.ueD2DTx[5].mobility.initialX = 350m
*.ueD2DTx[5].mobility.initialY = 350m
*.ueD2DRx[5].mobility.initialX = 360m
*.ueD2DRx[5].mobility.initialY = 350m

*.ueD2DTx[6].mobility.initialX = 350m
*.ueD2DTx[6].mobility.initialY = 360m
*.ueD2DRx[6].mobility.initialX = 360m
*.ueD2DRx[6].mobility.initialY = 360m

*.ueD2DTx[7].mobility.initialX = 350m
*.ueD2DTx[7].mobility.initialY = 370m
*.ueD2DRx[7].mobility.initialX = 360m
*.ueD2DRx[7].mobility.initialY = 370m

*.ueD2DTx[8].mobility.initialX = 350m
*.ueD2DTx[8].mobility.initialY = 380m
*.ueD2DRx[8].mobility.initialX = 360m
*.ueD2DRx[8].mobility.initialY = 380m

*.ueD2DTx[9].mobility.initialX = 350m
*.ueD2DTx[9].mobility.initialY = 390m
*.ueD2DRx[9].mobility.initialX = 360m
*.ueD2DRx[9].mobility.initialY = 390m


[Config testIncreasingDistance]
extends=PositionFixedClose
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

**.schedulingDisciplineUl = "NAIVE_ROUND_ROBIN"
**.schedulingDisciplineDl = "NAIVE_ROUND_ROBIN"
*.numUeD2DTx = 1
*.numUeD2DRx = 1

# Receiver is at (400,300).
*.ueD2DRx[0].mobility.initialX = 400m
*.ueD2DRx[0].mobility.initialY = 300m
# Transmitter moves from 10m away to 100m away.
*.ueD2DTx[0].mobility.initialX = ${d=410..500 step 10}m
*.ueD2DTx[0].mobility.initialY = 300m
output-scalar-file = ${resultdir}/${configname}/reused${d}-rep${repetition}.sca


[Config NaiveRR]
extends=PositionRandomClose
**.schedulingDisciplineUl = "NAIVE_ROUND_ROBIN"
**.schedulingDisciplineDl = "NAIVE_ROUND_ROBIN"
**.deployer.numRbDl = 5
**.deployer.numRbUl = 5
**.numBands = 5

[Config ReuseTester]
extends=TrafficFTP
*.numUeD2DTx = 2
*.numUeD2DRx = 2
**.deployer.numRbDl = 5
**.deployer.numRbUl = 5
**.numBands = 5
**.schedulingDisciplineUl = "REUSE_TESTER"
**.schedulingDisciplineDl = "REUSE_TESTER"

*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

*.ueD2DTx[0].mobility.initialX = 400m
*.ueD2DTx[0].mobility.initialY = 300m
*.ueD2DRx[0].mobility.initialX = 475m # 75m apart
*.ueD2DRx[0].mobility.initialY = 300m

*.ueD2DTx[1].mobility.initialX = 400m
*.ueD2DTx[1].mobility.initialY = ${d=310..400 step 10}m # 10m -> 100m away from other pair
*.ueD2DRx[1].mobility.initialX = 475m
*.ueD2DRx[1].mobility.initialY = ${d}m
output-scalar-file = ${resultdir}/${configname}/d${d}-rep${repetition}.sca

[Config AllocatorBestFitTester]
extends=ReuseTester
**.buildConflictGraph = true
**.conflictGraphUpdatePeriod = 1s
**.conflictGraphThreshold = -20   #dB
**.schedulingDisciplineUl = "ALLOCATOR_BESTFIT"
**.schedulingDisciplineDl = "ALLOCATOR_BESTFIT"

